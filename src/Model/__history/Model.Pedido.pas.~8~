unit Model.Pedido;

interface

uses
  System.Generics.Collections, Model.Cliente, Model.PedidoItem, Model.Produto,
  System.SysUtils;

type
  TPedido = class
  private
    FNumero: Integer;
    FDataEmissao: TDateTime;
    FCliente: TCliente;
    FItens: TObjectList<TPedidoItem>;
    FValorTotal: Currency;
    procedure CalculateTotal;
    procedure SetClienteCodigo(const ACodigo: Integer);
  public
    constructor Create;
    destructor Destroy; override;
    property Numero: Integer read FNumero write FNumero;
    property DataEmissao: TDateTime read FDataEmissao write FDataEmissao;
    property Cliente: TCliente read FCliente write FCliente;
    property Itens: TObjectList<TPedidoItem> read FItens;
    property ValorTotal: Currency read FValorTotal write FVAlorTotal;
    property ClienteCodigo: Integer write SetClienteCodigo;
  end;

implementation

{ TPedido }

procedure TPedido.CalculateTotal;
begin
  FValorTotal := 0;
  for var itm in FItens do
    FValorTotal := FValorTotal + itm.ValorTotal;
end;

constructor TPedido.Create;
begin
  inherited;
  FCliente := TCliente.Create;
  FItens := TObjectList<TPedidoItem>.Create(True);
  FDataEmissao := Now;
end;

destructor TPedido.Destroy;
begin
  FItens.Free;
  FCliente.Free;
  inherited;
end;

procedure TPedido.SetClienteCodigo(const ACodigo: Integer);
begin
  FCliente.Codigo := ACodigo;
end;

end.
